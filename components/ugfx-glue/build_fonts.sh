#!/bin/bash

set -x -e

MCUFONTPATH=../../ugfx/tools/mcufontencoder/src/

make -C ${MCUFONTPATH}

export PATH=${MCUFONTPATH}:$PATH

# Path to the mcufont encoder program
MCUFONT=mcufont

# Character ranges to include in the fonts.
# Default: ASCII only
ASCIICHARS=32-127

# Number of iterations in optimization
# Higher numbers compress better
ITERS=25

FONTS_FILE=userfonts.h
echo '// This file is generated by SHA2017-badge/Firmware/ugfx/build_fonts.sh' > ${FONTS_FILE}

function build {
	infile=`basename $1`
	outfile=$2
	fmt=$3
	size=$4
	bw=$5
	ext="${infile##*.}"
	noext="${infile%.*}"
    chars=$6
    if [ $ext = 'ttf' ]; then
        dat=$noext$size$bw.dat
        cmd=import_ttf
    else
        dat=$noext.dat
    fi
    if [ ! -f $dat ]; then
        $MCUFONT $cmd $1 $size $bw
        $MCUFONT filter $dat $chars
        if [ $outfile = 'LargeNumbers' ]; then
            $MCUFONT filter $dat 0x20-0x39
        fi
        if [ $fmt = 'rlefont' ]; then
            $MCUFONT rlefont_optimize $dat $ITERS
        fi
    fi

	if [ $fmt = 'rlefont' ]; then
		$MCUFONT rlefont_export $dat $outfile.c
	else
		$MCUFONT bwfont_export $dat $outfile.c
	fi
	echo '#include "'$outfile.c'"' >> ${FONTS_FILE}
}

# Commands are of form: build <input_file> <output_file> <output_format> [size] [bw]
# If bw is not given, builds an antialiased font.

build PermanentMarker.ttf    fonts/PermanentMarker22    rlefont 22 '' ${ASCIICHARS}
build PermanentMarker.ttf    fonts/PermanentMarker36    rlefont 36 '' ${ASCIICHARS}
build Roboto-Black.ttf       fonts/Roboto-Black22       rlefont 22 '' ${ASCIICHARS}
build Roboto-BlackItalic.ttf fonts/Roboto-BlackItalic24 rlefont 24 '' ${ASCIICHARS}
build Roboto-Regular.ttf     fonts/Roboto-Regular12     rlefont 12 '' ${ASCIICHARS}
build Roboto-Regular.ttf     fonts/Roboto-Regular18     rlefont 18 '' ${ASCIICHARS}
build Roboto-Regular.ttf     fonts/Roboto-Regular22     rlefont 22 '' ${ASCIICHARS}

